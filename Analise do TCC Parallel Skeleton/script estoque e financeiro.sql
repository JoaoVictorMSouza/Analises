-- MySQL Script generated by MySQL Workbench
-- Mon Jun 29 15:42:52 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema estoque_tcc
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema estoque_tcc
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `estoque_tcc` DEFAULT CHARACTER SET utf8 ;
USE `estoque_tcc` ;

-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_produto` (
  `id_produto` INT NOT NULL AUTO_INCREMENT,
  `nm_produto` VARCHAR(100) NOT NULL,
  `tp_produto` VARCHAR(100) NOT NULL,
  `vl_preco` DECIMAL(15,2) NOT NULL,
  `ds_produto` VARCHAR(100) NOT NULL,
  `dt_reposicao` DATETIME NOT NULL,
  `ds_notafiscal` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id_produto`))
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_servico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_servico` (
  `id_servico` INT NOT NULL AUTO_INCREMENT,
  `nm_servico` VARCHAR(100) NOT NULL,
  `tp_servico` VARCHAR(100) NOT NULL,
  `vl_preco` DECIMAL(15,2) NOT NULL,
  `ds_servico` VARCHAR(100) NOT NULL,
  `dt_reposicao` DATETIME NOT NULL,
  `ds_notafiscal` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_servico`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_estoque` (
  `id_estoque` INT NOT NULL AUTO_INCREMENT,
  `id_produto` INT NOT NULL,
  `id_servico` INT NOT NULL,
  `qtd_itens` INT NOT NULL,
  `dt_atualizacao` DATETIME NOT NULL,
  PRIMARY KEY (`id_estoque`),
  INDEX `fk_tb_estoque_tb_produto_idx` (`id_produto` ASC) VISIBLE,
  INDEX `fk_tb_estoque_tb_servico1_idx` (`id_servico` ASC) VISIBLE,
  CONSTRAINT `fk_tb_estoque_tb_produto`
    FOREIGN KEY (`id_produto`)
    REFERENCES `estoque_tcc`.`tb_produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_estoque_tb_servico1`
    FOREIGN KEY (`id_servico`)
    REFERENCES `estoque_tcc`.`tb_servico` (`id_servico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_fluxo_caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_fluxo_caixa` (
  `id_fluxodecaixa` INT NOT NULL AUTO_INCREMENT,
  `nm_gestor` VARCHAR(100) NOT NULL,
  `vl_inicial` DECIMAL(15,9) NOT NULL,
  `vl_entrada` INT NOT NULL,
  `vl_saida` INT NOT NULL,
  `vl_operacional` INT NOT NULL,
  `vl_final` DECIMAL(15,9) NOT NULL,
  PRIMARY KEY (`id_fluxodecaixa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_balanco_patrimonial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_balanco_patrimonial` (
  `id_balanco_patrimonial` INT NOT NULL AUTO_INCREMENT,
  `nm_contador` VARCHAR(100) NOT NULL,
  `dt_ativo` DATETIME NOT NULL,
  `dt_passivo` DATETIME NOT NULL,
  `vl_circulante_ativo` DECIMAL(15,9) NOT NULL,
  `vl_circulante_passivo` DECIMAL(15,9) NOT NULL,
  `vl_patrimonio_liquido_passivo` DECIMAL(15,9) NOT NULL,
  `vl_total_ativo` DECIMAL(15,9) NOT NULL,
  `vl_total_passivo` DECIMAL(15,9) NOT NULL,
  PRIMARY KEY (`id_balanco_patrimonial`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estoque_tcc`.`tb_resultado_exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque_tcc`.`tb_resultado_exercicio` (
  `id_resultado_exercicio` INT NOT NULL AUTO_INCREMENT,
  `id_fluxodecaixa` INT NOT NULL,
  `id_balanco_patrimonial` INT NOT NULL,
  `nm_contador` VARCHAR(100) NOT NULL,
  `vl_bruto` DECIMAL(15,2) NOT NULL,
  `vl_receita_liquida` DECIMAL(15,9) NOT NULL,
  `vl_lucro_bruto` DECIMAL(15,9) NOT NULL,
  `vl_despesas` DECIMAL(15,9) NOT NULL,
  `vl_prejuizo` DECIMAL(15,9) NOT NULL,
  `vl_lucro` DECIMAL(15,9) NOT NULL,
  PRIMARY KEY (`id_resultado_exercicio`),
  INDEX `fk_tb_resultado_exercicio_tb_fluxo_caixa1_idx` (`id_fluxodecaixa` ASC) VISIBLE,
  INDEX `fk_tb_resultado_exercicio_tb_balanco_patrimonial1_idx` (`id_balanco_patrimonial` ASC) VISIBLE,
  CONSTRAINT `fk_tb_resultado_exercicio_tb_fluxo_caixa1`
    FOREIGN KEY (`id_fluxodecaixa`)
    REFERENCES `estoque_tcc`.`tb_fluxo_caixa` (`id_fluxodecaixa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_resultado_exercicio_tb_balanco_patrimonial1`
    FOREIGN KEY (`id_balanco_patrimonial`)
    REFERENCES `estoque_tcc`.`tb_balanco_patrimonial` (`id_balanco_patrimonial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

use estoque_tcc;


insert into tb_produto (nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Tomate', 'Fruta', 0.60, 'Comestivel', '2020-03-01', '00000000-000-00000-00');
     
insert into tb_produto (nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Couve', 'Verdura', 1.99, 'Comestivel', '2020-05-01', '10000000-000-00000-00');
     
insert into tb_produto (nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Mandioca', 'Legume', 1.50, 'Comestivel', '2020-02-01', '20000000-000-00000-00');
     
insert into tb_produto (nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Banana', 'Fruta', 6.99, 'Comestivel', '2020-01-01', '30000000-000-00000-00');
   
insert into tb_produto (nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Salsa', 'Verdura', 1.50, 'Comestivel', '2020-04-01', '40000000-000-00000-00');
     
insert into tb_produto ( nm_produto, tp_produto, vl_preco, ds_produto, dt_reposicao, ds_notafiscal)
	 values ('Milho-Verde', 'Legume', 2.50, 'Comestivel', '2020-02-01', '50000000-000-00000-00');
     
     
insert into tb_servico ( nm_servico, tp_servico, vl_preco, ds_servico, dt_reposicao, ds_notafiscal)
	 values ('Carreto', 'Cliente', 10.00, ' ','0000-00-00',' ');

insert into tb_servico ( nm_servico, tp_servico, vl_preco, ds_servico, dt_reposicao, ds_notafiscal)
	 values ('Cafeteria', 'Cliente', 00.00, ' ', '0000-00-00',' ');
     
     
insert into tb_estoque(id_produto, id_servico, qtd_itens,dt_atualizacao)
	 values (1,1,145,'2020-06-29');
     
insert into tb_estoque(id_produto, id_servico, qtd_itens,dt_atualizacao)
	 values (4,1,259,'2020-06-28');
 
 
insert into tb_fluxo_caixa(nm_gestor, vl_inicial, vl_entrada, vl_saida, vl_operacional, vl_final)
	 values ('Pedro', 11.000, 14900, 14320, 580, 11.580);
 
 
insert into tb_balanco_patrimonial(nm_contador, dt_ativo, dt_passivo, vl_circulante_ativo, vl_circulante_passivo,vl_patrimonio_liquido_passivo, vl_total_ativo, vl_total_passivo)
	 values ('Matheus','2020-06-29', '2020-06-29', 547.021, 440.826, 279.201, 1253.835, 1253.835);
    
    
insert into tb_resultado_exercicio(id_fluxodecaixa, id_balanco_patrimonial, nm_contador, vl_bruto, vl_receita_liquida, vl_lucro_bruto, vl_despesas, vl_prejuizo, vl_lucro)
	 values (1 , 1, 'Jo√£o', 20.250000, 20.595137, 19.364697, 7.532022, 3.454100, 17.520125);


	select *
	  from tb_estoque
inner join tb_produto
		on tb_estoque.id_produto = tb_produto.id_produto
      join tb_servico
		on tb_estoque.id_servico = tb_servico.id_servico;
        
	select * 
	  from tb_resultado_exercicio
inner join tb_fluxo_caixa
		on tb_resultado_exercicio.id_fluxodecaixa = tb_fluxo_caixa.id_fluxodecaixa
	  join tb_balanco_patrimonial
		on tb_resultado_exercicio.id_balanco_patrimonial = tb_balanco_patrimonial.id_balanco_patrimonial;